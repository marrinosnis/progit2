[[r_first_time]]
=== Ρύθμιση του Git για πρώτη φορά

Έχοντας πλέον εγκατεστημένο το Git στον υπολογιστή σας, θα χρειαστεί να κάνετε μερικές ρυθμίσεις ώστε να εξατομικεύσετε το περιβάλλον του Git.
Τις ρυθμίσεις αυτές θα χρειαστεί να τις κάνετε μόνο μία φορά σε κάθε υπολογιστή, θα μείνουν ως έχουν μετά από αναβαθμίσεις.
Μπορείτε επίσης να αλλάξετε τις ρυθμίσεις αυτές απλά και μόνο διατρέχοντας τις εντολές ξανά.

Το Git περιέχει ένα εργαλείο που ονομάζεται `git config` (((εντολές git, config))) το οποίο σας επιτρέπει να δείτε και να θέσετε τιμές στις λεγόμενες μεταβλητές διαμόρφωσης (configuration variables), που ελέγχουν όλες τις πτυχές εμφάνισης και λειτουργίας του Git.
Οι μεταβλητές αυτές αποθηκεύονται σε τρία διαφορετικά μέρη:

1. Στο αρχείο `<path>/etc/gitconfig`: περιέχει τιμές για όλους τους χρήστες του συστήματος και όλα τα αποθετήριά τους. 
  Αν χρησιμοποιήσετε την επιλογή `--system` στην εντολή `git config`, τότε η εντολή διαβάζει και γράφει από αυτό το αρχείο.
  Επειδή αυτό είναι ένα αρχείο ρύθμισης του συστήματος, πρέπει να έχετε προνόμια διαχειριστή ή superuser για να το τροποποιήσετε
2. Στο αρχείο `~/.gitconfig` ή `~/.config/git/config`: περιέχει τιμές συγκεκριμένες για εσάς, τον χρήστη.
  Για να κάνετε το Git να γράφει σε και να διαβάζει από αυτό το αρχείο θα πρέπει να χρησιμοποιήσετε την επιλογή `--global`. Αυτές οι τιμές επηρεάζουν όλα τα αποθετήρια με τα οποία εργάζεστε στο σύστημά σας.
3. Στο αρχείο `config` στον κατάλογο του Git (το αρχείο αυτό ονομάζεται `.git/config`) του αποθετηρίου το οποίο χρησιμοποιείτε ανά πάσα στιγμή: περιέχει τιμές ειδικά για το συγκεριμένο αποθετήριο. 
  Μπορείτε να επιβάλετε στο Git να διαβάζει από και να γράφει σε αυτό το αρχείο με την επιλογή `-- local`, που είναι και η προεπιλογή. Προφανώς, θα πρέπει να βρίσκεστε μέσα σε κάποιο αποθετήριο Git για να λειτουργήσει σωστά αυτή η εντολή.

Καθένα από τα παραπάνω επίπεδα υπερσκελίζει τις τιμές του προηγούμενου επιπέδου. 
Για παράδειγμα, οι τιμές του αρχείου `.git/config` υπερσκελίζουν εκείνες του αρχείου `/etc/gitconfig`.

Σε υπολογιστές Windows, το Git θα αναζητήσει το αρχείο `.gitconfig` στον κατάλογο `$HOME` (συνήθως στην τοποθεσία `C:\Users\$USER`).
Επίσης, θα αναζητήσει το αρχείο `/etc/gitconfig`, η τοποθεσία του οποίου ορίζεται σε σχέση με το MSys root, που αντιστοιχεί στην τοποθεσία στην οποία αποφασίσατε να εγκαταστήσετε το Git στα Windows σας, όταν το εγκαθιστούσατε. 
Αν χρησιμοποιείτε την έκδοση 2.x ή μεταγενέστερη του Git για Windows, υπάρχει επίσης ένα αρχείο ρυθμίσεων του συστήματος στον κατάλογο `C:\Documents and Settings\All Users\Application Data\Git\config` στα Windows XP και στον `C:\ProgramData\Git\config` στα Windows Vista ή μεταγενέστερα. 
Αυτό το αρχείο ρυθμίσεων μορεί να αλλαχθεί μόνον με την εντολή `git config -f <αρχείο>` όταν εκτελείται από έναν διαχειριστή.

==== Η ταυτότητά σας

Το πρώτο πράγμα που θα πρέπει να κάνετε αφού εγκαταστήσετε το Git είναι να ορίσετε το όνομα χρήστη και τη διεύθυνση e-mail σας.
Το παραπάνω είναι πολύ σημαντικό καθώς κάθε υποβολή (commit) που κάνετε στο Git θα περιέχει τις πληροφορίες αυτές:

[source,console]
----
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
----

Όπως και οι προηγούμενες ρυθμίσεις, έτσι και αυτή χρειάζεται να γίνει μόνο μία φορά αν χρησιμοποιήσετε την επιλογή `--global`, διότι τότε το Git θα χρησιμοποιεί πάντα αυτές τις πληροφορίες για οτιδήποτε κάνετε σε αυτό το σύστημα.
Αν θέλετε να τροποποιήσετε τις παραπάνω πληροφορίες για συγκεκριμένα έργα τότε μπορείτε να τρέξετε τις ίδιες εντολές, μέσα από τον κατάλογο του έργου, χωρίς την επιλογή `--global`.

Πολλά από τα γραφικά εργαλεία θα σας βοηθήσουν σε αυτή τη διαδικασία όταν τα χρησιμοποιήσετε για πρώτη φορά.

==== Ο επεξεργαστής κειμένου

Τώρα που έχετε ορίσει την ταυτότητά σας, μπορείτε να καθορίσετε τον επεξεργαστή κειμένου που θα χρησιμοποιείτε όταν το Git σάς ζητάει να επεξεργαστείτε κάποιο κείμενο.
Αν δεν τον ρυθμίσετε, το Git θα χρησιμοποιήσει τον προεπιλεγμένο επεξεργαστή κειμένου του συστήματός σας, π.χ. τον Vim.
Αν θέλετε να χρησιμοποιήσετε έναν διαφορετικό επεξεργαστή κειμένου, όπως τον Emacs, μπορείτε να εκτελέσετε την εντολή:

[source,console]
----
$ git config --global core.editor emacs
----

[ΝΟΤΕ]
====
Ο Vim και ο Emacs είναι δημοφιλείς επεξεργαστές κειμένου που χρησιμοποιοούνται συχνά από προγραμματιστές σε λειτουργικά συστήματα που βασίζονται στο Unix, όπως το Linux και το Mac.
Αν χρησιμοποιείτε κάποιον άλλο επεξεργαστή κειμένου, ή κάποιε έκδοση 32-bit, μπορείτε να βρείτε οδηγίες για το πώς να εγκαταστήσετε τον αγαπημένο σας επεξεργαστή με το Git στο <<C-git-commands#ch_core_editor>>.
====

[WARNING]
====
Αν δεν ρυθμίσετε τον επεξεργαστή κειμένου που χρησιμοποιείτε με αυτό τον τρόπο, θα μπερδευτείτε πολύ όταν το Git προσπαθήσει να τον εκκινήσει. 
Για παράδειγμα στα Windows, μπορεί μια λειτουργία του Git να τερματιστεί πρόωρα κατά τη διάρκεια της επεξεργασίας. 
====

==== Το προεπιλεγμένο σας όνομα κλάδου

Το Git εξ ορισμού δημιουργεί έναν κλάδο (branch) με το όνομα _master_, όταν δημιουργείτε ένα καινούριο αποθετήριο με την εντολή `git init`. 
Από την έκδοση 2.28 και μετά του Git, μπορείτε να ορίσετε διαφορετικό όνομα για τον αρχικό κλάδο.

Για να ορίσετε ως προεπιλεγμένο όνομα κλάδου το _main_, εκτελέστε:

[source,console]
----
$ git config --global init.defaultBranch main
----

==== Έλεγχος των ρυθμίσεών σας

Αν θέλετε να ελέγξετε τις ρυθμίσεις σας, μπορείτε να εκτελέσετε την εντολή `git config --list` για να παραθέσετε όλες τις ρυθμίσεις του Git:

[source,console]
----
$ git config --list
user.name=John Doe
user.email=johndoe@example.com
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto
...
----

Επειδή το Git διαβάζει τις ρυθμίσεις του από διαφορετικά αρχεία (`/etc/gitconfig` και `~/.gitconfig` για παράδειγμα), μπορεί να δείτε κάποιες από αυτές περισσότερες από μια φορά.
Στην περίπτωση αυτή, το Git θα χρησιμοποιήσει την τελευταία τιμή για κάθε ξεχωριστή ρύθμιση.

Μπορείτε επίσης να δείτε την τιμή μιας συγκεκριμένης ρύθμισης πληκτρολογώντας `git config <κλειδί>`:(((εντολές git, config)))

[source,console]
----
$ git config user.name
John Doe
----

[NOTE]
====
Επειδή το Git ενδεχομένως μπορεί να διαβάσει την τιμή της ίδιας μεταβλητής ρύθμισης από περισσότερα από ένα αρχεία, είναι δυνατό να δείτε κάποια αναπάντεχη τιμή για κάποια από αυτές τις μεταβλητές χωρίς να γνωρίζετε γιατί.
Σε τέτοιες περιπτώσεις, μπορείτε να ρωτήσετε το Git ποια είναι η προέλευση (_origin_) αυτής της τιμής και θα σας πει ποιο αρχείο ρύθμισης είπε την τελευταία λέξη για την τιμή αυτής της παραμέτρου:

[source,console]
----
$ git config --show-origin rerere.autoUpdate
file:/home/johndoe/.gitconfig	false
----
====