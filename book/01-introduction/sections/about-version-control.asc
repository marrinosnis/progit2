=== Σχετικά με τον έλεγχο εκδόσεων

(((έλεγχος εκδόσεων)))
Τι είναι ο "`έλεγχος εκδόσεων`" και γιατί πρέπει να σας απασχολεί;
Ο έλεγχος εκδόσεων είναι ένα σύστημα το οποίο καταγράφει αλλαγές σε ένα αρχείο ή σε ένα σύνολο αρχείων έτσι ώστε να μπορείτε να ανακαλέσετε συγκεκριμένες εκδόσεις τους αργότερα.
Στα παραδείγματα του βιβλίου, τα αρχεία που θα χρησιμοποιήσετε για έλεγχο εκδόσεων θα είναι αρχεία πηγαίου κώδικα λογισμικού αν και στην πραγματικότητα, θα μπορούσατε να χρησιμοποιήσετε αρχεία οποιουδήποτε τύπου.

Αν είστε γραφίστες ή σχεδιαστές ιστοσελίδων και θέλετε να κρατήσετε κάθε έκδοση κάποιας εικόνας ή κάποιας σελιδοποίησης (κάτι το οποίο είναι εξαιρετικά πιθανό) τότε ένα Σύστημα Ελέγχου Εκδόσεων (Version Control System, VCS) είναι μια πολύ σοφή επιλογή. 
Ένα τέτοιο σύστημα σάς επιτρέπει να επαναφέρετε συγκεκριμένα αρχεία, ακόμα και ολόκληρο έργο (project) σε προγενέστερη κατάσταση, να συγκρίνετε αλλαγές που έχουν γίνει με την πάροδο του χρόνου, να δείτε ποιος τροποποίησε τελευταίος κάτι που ενδεχομένως δημιουργεί κάποιο πρόβλημα, ποιος δημιούργησε κάποιο πρόβλημα και άλλα πολλά. 
Η χρήση ενός συστήματος ελέγχου εκδόσεων σημαίνει επίσης ότι αν τα κάνετε θάλασσα ή χάσετε αρχεία, είναι εύκολο να τα ανακτήσετε. 
Επιπλέον, όλες αυτές οι δυνατότητες προσφέρονται με πολύ μικρή επιβάρυνση.

==== Τοπικά συστήματα ελέγχου εκδόσεων

(((έλεγχος εκδόσεων, τοπικός)))
Η προτιμώμενη από πολλούς μέθοδος για έλεγχο εκδόσεων είναι να αντιγράφουν τα αρχεία σε ένα άλλο φάκελο (πιθανότατα ένα χρονολογημένο κατάλογο αν είναι έξυπνοι).
Αυτή η προσέγγιση είναι πολύ κοινή επειδή είναι τόσο απλή, συγχρόνως όμως είναι και πολύ επιρρεπής σε σφάλματα.
Είναι εύκολο να ξεχάσετε σε ποιον φάκελο βρίσκεστε και να επεξεργαστείτε λάθος αρχείο ή να διαγράψετε λάθος αρχεία.

Για να αντιμετωπίσουν αυτό το πρόβλημα οι προγραμματιστές ανέπτυξαν από παλιά τοπικά VCS που είχαν απλή βάση δεδομένων που κρατούσε όλες τις αλλαγές των αρχείων κάτω από έλεγχο εκδόσεων.

.Διάγραμμα τοπικού ελέγχου εκδόσεων
image::images/local.png[Διάγραμμα τοπικού ελέγχου εκδόσεων]

Ένα από τα πιο δημοφιλή VCS ήταν το σύστημα RCS το οποίο διανέμεται ακόμα σε πολλούς υπολογιστές. 
Το https://www.gnu.org/software/rcs/[RCS^] δουλεύει χρησιμοποιώντας συλλογές από επιθέματα (patches) (που είναι οι διαφορές μεταξύ αρχείων) σε μια συγκεκριμένη μορφή στον δίσκο. Έπειτα, μπορεί να ξαναδημιουργήσει κάθε αρχείο όπως ήταν σε οποιοδήποτε χρονικό σημείο εφαρμόζοντας όλα τα επιθέματα.

==== Συγκεντρωτικά συστήματα ελέγχου εκδόσεων

(((έλεγχος εκδόσεων, συγκεντρωτικός)))
Το επόμενο σημαντικό πρόβλημα που αντιμετώπισαν οι προγραμματιστές ήταν η ανάγκη για συνεργασία με προγραμματιστές άλλων συστημάτων. 
Για την αντιμετώπιση του συγκεκριμένου προβλήματος, αναπτύχθηκαν τα συγκεντρωτικά συστήματα ελέγχου εκδόσεων (Centralized Version Control Systems, CVCSs). 
Τα συστήματα αυτά (όπως το CVS, το Subversion και το Perforce) έχουν έναν διακομιστή (server), ο οποίος περιέχει όλα τα αρχεία και κάποιους πελάτες (clients) οι οποίοι ενημερώνουν (check out) τα αρχεία τους από αυτή την κεντρική τοποθεσία. (((CVS)))(((Subversion)))(((Perforce)))
Για πολλά χρόνια, αυτό ήταν και το καθιερωμένο πρότυπο για τα συστήματα ελέγχου εκδόσεων.

.Συγκεντρωτικός έλεγχος εκδόσεων
image::images/centralized.png[Συγκεντρωτικός έλεγχος εκδόσεων]

Αυτή η μέθοδος προσφέρει πολλά πλεονεκτήματα, ειδικά σε σχέση με τα τοπικά VCSs.
Για παράδειγμα, ο καθένας γνωρίζει σε κάποιο βαθμό με τι ασχολούνται όλοι οι υπόλοιποι σε ένα έργο.
Οι διαχειριστές ελέγχουν σε μεγάλο βαθμό τι επιτρέπεται να κάνει ο καθένας και επιπλέον η διαχείριση ενός συγκεντρωτικού συστήματος ελέγχου εκδόσεων είναι πολύ ευκολότερη από τη διαχείριση τοπικών βάσεων δεδομένων σε κάθε πελάτη.

Η συγκεκριμένη μέθοδος έχει όμως και σημαντικά μειονεκτήματα.
Το πιο προφανές είναι το γεγονός ότι μια βλάβη στον κεντρικό διακομιστή προκαλεί την αποτυχία όλου του συστήματος.
Αν ο διακομιστής πέσει για μία ώρα, τότε κατά τη διάρκεια αυτής της ώρας κανείς δεν μπορεί να συνεργαστεί με το VCS ή να αποθηκεύσει αλλαγές σε αυτό.
Αν για παράδειγμα ο σκληρός δίσκος στον οποίο βρίσκεται η κεντρική βάση δεδομένων καταστραφεί και δεν έχουν κρατηθεί τα απαραίτητα αντίγραφα ασφαλείας τότε χάνονται τα πάντα -- ολόκληρο το ιστορικό του έργου χάνεται εκτός από στιγμιότυπα (snapshots) του έργου που μπορεί να έχουν κρατήσει στους υπολογιστές τους κάποιοι προγραμματιστές.
Τα τοπικά VCS πάσχουν από το ίδιο πρόβλημα -- όταν το ιστορικό ενός έργου βρίσκεται σε ένα και μοναδικό μέρος τότε υπάρχει ο κίνδυνος να χαθούν τα πάντα.

==== Κατανεμημένα συστήματα ελέγχου εκδόσεων

(((έλεγχος εκδόσεων, κατανεμημένος)))
Στο σημείο αυτό έρχονται τα κατανεμημένα (Distributed) DVCS.
Σε ένα κατανεμημένο σύστημα (όπως το Git, το Mercurial ή το Darcs) οι πελάτες δεν ανακτούν μόνο το τελευταίο στιγμιότυπο των αρχείων τους, αλλά ολόκληρο το αποθετήριο (repository), συμπεριλαμβανομένης και ολόκληρου του ιστορικού.
Συνεπώς, στην περίπτωση που ο διακομιστής πεθάνει, τα τοπικά αποθετήρια που έχουν οι πελάτες μπορούν να χρησιμοποιηθούν ώστε να επαναφέρουν τα δεδομένα του.
Κάθε κλώνος είναι ένα πλήρες αντίγραφο ασφαλείας όλων των δεδομένων.

.Διάγραμμα κατανεμημένος έλεγχος εκδόσεων
image::images/distributed.png[.Διάγραμμα κατανεμημένος έλεγχος εκδόσεων]

Επιπλέον, πολλά από αυτά τα συστήματα μπορούν να συνεργάζονται με πολλά απομακρυσμένα αποθετήρια, έτσι ώστε να μπορείτε να συνεργάζεστε με πολλές ομάδες και με διαφορετικούς τρόπους ταυτόχρονα στο ίδιο έργο.
Αυτό σάς επιτρέπει να δημιουργείτε διάφορους τύπους ροής εργασιών (workflows) όπως ιεραρχικά μοντέλα, που είναι αδύνατο να δημιουργήσετε σε συγκεντρωτικά συστήματα.
