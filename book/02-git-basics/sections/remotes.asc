[[r_remote_repos]]
=== Δουλεύοντας με απομακρυσμένα αποθετήρια

Για να μπορείτε να συνεργάζεστε σε έργα του Git, θα πρέπει να γνωρίζετε πώς να διαχειρίζεστε τα απομακρυσμένα αποθετήριά σας.
Τα απομακρυσμένα αποθετήρια (remote repositories) είναι εκδόσεις του έργου σας που βρίσκονται στο Διαδίκτυο ή σε κάποιο δίκτυο.
Μπορείτε να δημιουργήσετε όσα θέλετε και καθένα από αυτά είναι προσβάσιμα από σας είτε ως για ανάγνωση-μόνο είτε για ανάγνωση/εγγραφή.
Η συνεργασία με άλλους συμπεριλαμβάνει τη διαχείριση αυτών των απομακρυσμένων αποθετηρίων, ώθηση και ελκυσμό δεδομένων προς και από αυτά όποτε χρειάζεται να κοινοποιήσετε τη δουλειά σας ή να ενημερωθείτε για τη δουλειά άλλων. 
Η διαχείριση τέτοιων αποθετηρίων χρειάζεται ικανότητες όπως: πρόσθεση καινούριων απομακρυσμένων αποθετηρίων, διαγραφή αποθετηρίων που δεν έχουν πια κάποια χρησιμότητα, διαχείριση απομακρυσμένων κλάδων και ορισμό τους ως υπο-παρακολούθηση ή τερματισμό της παρακολούθησής τους και άλλα.
Σε αυτή την ενότητα, θα ασχοληθείτε με κάποιες από αυτές τις δεξιότητες.

[NOTE]
.Τα απομακρυσμένα αποθετήρια μπορεί να βρίσκονται στον υπολογιστή σας.
====
Είναι απολύτως δυνατό να εργάζεστε με ένα "`απομακρυσμένο`" αποθετήριο, που βρίσκεται στον ίδιο υπολογιστή στον οποίο βρίσκεστε και εσείς. 
Η λέξη "`απομακρυσμένο`" δεν υπονοεί απαραίτητα ότι το αποθετήριο βρίσκεται σε κάπου αλλού στο δίκτυο ή στο Διαδίκτυο, αλλά μόνο ότι βρίσκεται κάπου αλλού. 
Όταν εργάζεστε με ένα τέτοιο απομακρυσμένο αποθετήριο περιλαμβάνει επίσης τις συνήθεις λειτουργίες ώθησης (push), ελκυσμού (pull) και ανάκτησης (fetch), όπως με κάθε άλλο απομακρυσμένο αποθετήριο.
====

==== Εμφάνιση των απομακρυσμένων αποθετηρίων σας

Για να δείτε τους απομακρυσμένους διακομιστές που έχετε παραμετροποιήσει, εκτελέστε την εντολή `git remote`.(((εντολές git, remote)))
Η εντολή αυτή θα σας επιστρέψει μια λίστα με τα ονόματα των απομακρυσμένων που έχετε ορίσει.
Αν έχετε κλωνοποιήσει το αποθετήριό σας, θα πρέπει να βλέπετε τουλάχιστον το `origin` -- που είναι το προεπιλεγμένο όνομα που δίνει το Git στον διακομιστή από τον οποίο μόλις κλωνοποιήσατε:

[source,console]
----
$ git clone https://github.com/schacon/ticgit
Cloning into 'ticgit'...
remote: Reusing existing pack: 1857, done.
remote: Total 1857 (delta 0), reused 0 (delta 0)
Receiving objects: 100% (1857/1857), 374.35 KiB | 268.00 KiB/s, done.
Resolving deltas: 100% (772/772), done.
Checking connectivity... done.
$ cd ticgit
$ git remote
origin
----

Η επιλογή `-v`, η οποία θα σας δείξει τα σύντομα ονόματα των απομακρυσμένων αποθετηρίων σας μαζί με τις διευθύνσεις URL που είναι συσχετισμένες με αυτά:

[source,console]
----
$ git remote -v
origin  https://github.com/schacon/ticgit (fetch)
origin  https://github.com/schacon/ticgit (push)
----

Αν έχετε περισσότερα από ένα απομακρυσμένα αποθετήρια, η εντολή αυτή θα τα παραθέσει όλα.
Για παράδειγμα, ένα αποθετήριο με πολλά απομακρυσμένα αποθετήρια, ώστε να συνεργάζονται πολλά άτομα, θα φαίνεται κάπως έτσι:

[source,console]
----
$ cd grit
$ git remote -v
bakkdoor  https://github.com/bakkdoor/grit (fetch)
bakkdoor  https://github.com/bakkdoor/grit (push)
cho45     https://github.com/cho45/grit (fetch)
cho45     https://github.com/cho45/grit (push)
defunkt   https://github.com/defunkt/grit (fetch)
defunkt   https://github.com/defunkt/grit (push)
koke      git://github.com/koke/grit.git (fetch)
koke      git://github.com/koke/grit.git (push)
origin    git@github.com:mojombo/grit.git (fetch)
origin    git@github.com:mojombo/grit.git (push)
----

Αυτό σημαίνει ότι μπορείτε να τραβήξουμε τη συνεισφορά καθενός από αυτούς τους χρήστες πολύ εύκολα.
Επιπλέον ενδεχομένως μπορείτε να ωθήσετε αλλαγές σε κάποιο ή κάποια από αυτά τα απομακρυσμένα αποθετήρια, αν και αυτό δεν το γνωρίζουμε ακόμα.

Παρατηρήστε ότι τα απομακρυσμένα αποθετήρια χρησιμοποιούν πολλά πρωτόκολλα· 
θα καλύψετε αναλυτικά τα πρωτόκολλα αυτά στο <<ch04-git-on-the-server#r_getting_git_on_a_server>>.

==== Προσθήκη απομακρυσμένων αποθετηρίων

Έχουμε ήδη αναφέρει και έχουμε επιδείξει πώς η εντολή `git clone` _έμμεσα_ προσθέτει το απομακρυσμένο αποθετήριο `origin` στο αποθετήριό σας. 
Ας δούμε πως μπορούμε να προσθέσουμε ένα νέο απομακρυσμένο αποθετήριο _άμεσα_.(((εντολές git, remote)))
Για να προσθέσετε ένα νέο απομακρυσμένο αποθτεήριο Git με ένα σύντομο όνομα, το οποίο μπορείτε να θυμάστε εύκολα, εκτελέστε την εντολή `git remote add <shortname> <url>`:

[source,console]
----
$ git remote
origin
$ git remote add pb https://github.com/paulboone/ticgit
$ git remote -v
origin  https://github.com/schacon/ticgit (fetch)
origin  https://github.com/schacon/ticgit (push)
pb  https://github.com/paulboone/ticgit (fetch)
pb  https://github.com/paulboone/ticgit (push)
----

Τώρα πλέον μπορείτε να χρησιμοποιείτε στη γραμμή εντολών τη συμβολοσειρά `pb` αντί για ολόκληρη τη διεύθυνση του αποθετηρίου.
Για παράδειγμα, αν θέλετε να ανακτήσετε (fetch) όλες τις πληροφορίες που έχει ο Paul στο αποθετήριό του, μπορείτε να εκτελέσετε την εντολή `git fetch pb`:

[source,console]
----
$ git fetch pb
remote: Counting objects: 43, done.
remote: Compressing objects: 100% (36/36), done.
remote: Total 43 (delta 10), reused 31 (delta 5)
Unpacking objects: 100% (43/43), done.
From https://github.com/paulboone/ticgit
 * [new branch]      master     -> pb/master
 * [new branch]      ticgit     -> pb/ticgit
----

Ο κλάδος `master` του Paul είναι πλέον προσβάσιμος τοπικά σε σας ως `pb/master` -- μπορούμε να τον συγχωνεύσουμε σε κάποιον δικό μας κλάδο, ή να φτιάξουμε (check out) έναν τοπικό κλάδο σε αυτό το σημείο, αν θέλουμε να το επιθεωρήσουμε.
Θα δούμε περισσότερα για τους κλάδους και πώς τους χρησιμοποιούμε στην ενότητα <<ch03-git-branching#ch03-git-branching>>.

[[r_fetching_and_pulling]]
==== Ανάκτηση δεδομένων από απομακρυσμένα αποθετήρια

Όπως μόλις είδαμε, για να πάρουμε δεδομένα από απομακρυσμένα έργα, μπορούμε να εκτελέσουμε:(((εντολές git, fetch)))

[source,console]
----
$ git fetch [remote-name]
----

Η εντολή αυτή θα πάει στο απομακρυσμένο έργο και θα τραβήξει όλα τα δεδομένα από αυτό το απομακρυσμένο έργο που δεν έχουμε ακόμα.
Αφού γίνει αυτό, θα έχουμε πρόσβαση σε όλους τους κλάδους αυτού του απομακρυσμένου έργου, τους οποίους και μπορούμε να συγχωνεύσουμε ή να τους επιθεωρήσουμε περαιτέρω.

Όταν κλωνοποιείτε ένα αποθετήριο, το αποθετήριο αυτό αποθηκεύεται με το όνομα "`origin`".
Συνεπώς, η εντολή `git fetch origin` ανακτά όλες τις νέες αλλαγές που έχουν γίνει από τότε που κλωνοποιήσατε το αποθετήριο ή από τότε που ανακτήσατε δεδομένα από αυτό για τελευταία φορά.
Είναι σημαντικό να τονίσετε ότι η εντολή `git fetch` απλά τραβά δεδομένα στο τοπικό σας αποθετήριο· δεν συγχωνεύει τα δεδομένα αυτά με διάφορες αλλαγές που μπορεί να έχετε κάνει εσείς τοπικά.
Για να γίνει αυτό, θα πρέπει να κάνετε τη συγχώνευση χειροκίνητα όταν είστε έτοιμοι να το κάνετε.

Αν ο κλάδος που παρακολουθεί έναν απομακρυσμένα κλάδο (περισσότερες λεπτομέρειες για αυτό στην επόμενη ενότητα και την ενότητα <<ch03-git-branching#ch03-git-branching>>), μπορείτε να χρησιμοποιήσετε την εντολή `git pull`. 
Η εντολή αυτή θα ανακτήσει έναν απομακρυσμένο κλάδο και θα τον συγχωνεύσει αυτόματα στον τρέχοντα κλάδο σας.(((εντολές git, pull)))
Αυτή η ροή εργασιών ενδεχομένως σας φαίνεται πιο εύκολη· επιπλέον, η εντολή `git clone` θέτει αυτόματα τον τοπικό σας κλάδο `master` να παρακολουθεί τον απομακρυσμένο κλάδου `master` (ή όπως ονομάζεται ο προεπιλεγμένος κλάδος).
Η εκτέλεση της εντολής `git pull`, γενικά ανακτά τα δεδομένα από τον διακομιστή, τον οποίο είχατε αρχικά κλωνοποιήσει και προσπαθεί να συγχωνεύσε αυτά τα δεδομάνα στον κώδικα πάνω στον οποίο εργάζεστε.

[NOTE]
====
Από την έκδοση 2.27 του Git και μετά, η εντολή `git pull` σας προειδοποιεί αν η μεταβλητή `pull.rebase` δεν έχει καθοριστέι.
Το Git θα συνεχίσει να σας δίνει προειδοποιήσεις μέχρι να καθορίσετε αυτή τη μεταβλητή.

Αν θέλετε την προεπιλεμγένη συμπεριφορά του Git (αν είναι δυνατό κάνε fast-forward, αλλιώς δημιούργησε μία υποβολή συγχώνευσης (merge commit)):
`git config --global pull.rebase "false"`

Αν θέλετε να κάνετε rebase όταν ελκύετε:
`git config --global pull.rebase "true"`
====

[[r_pushing_remotes]]
==== Ώθηση δεδομένων σε απομακρυσμένα αποθετήρια

Όταν έχετε φέρει κάποιο έργο σας σε σημείο που θέλετε να το κοινοποιήσετε, θα πρέπει να το ωθήσετε.
Η εντολή είναι απλή: `git push <όνομα-απομακρυσμένου> <όνομα-κλάδου>`.(((εντολές git, push)))
Για παράδειγμα, αν θέλετε να ωθήσετε τον τοπικό σας κλάδο `master` στον απομακρυσμένο διακομιστή `origin` (επαναλαμβάνουμε ότι η κλωνοποίηση παραμετροποιεί αυτόματα αυτά τα ονόματα), τότε μπορείτε να εκτελέσετε αυτή την εντολή έτσι ώστε να ωθήσετε τις υποβολές (commits) που έχετε κάνει στον διακομιστή:

[source,console]
----
$ git push origin master
----

Η εντολή αυτή θα εκτελεστεί επιτυχώς μόνο αν έχετε κλωνοποιήσει από έναν διακομιστή στον οποίο έχετε δικαίωμα εγγραφής και αν κανείς άλλος δεν έχει ωθήσει δεδομένα στο μεσοδιάστημα.
Αν εσείς και κάποιος άλλος έχετε κλωνοποιήσει το έργο ενώ αυτό βρίσκεται στην ίδια κατάσταση και αυτός ωθήσει δεδομένα στον διακομιστή και μετά ωθήσετε εσείς δεδομένα στον διακομιστή, η δική σας εντολή για ώθηση δεδομένων θα απορριφθεί.
Αυτό που θα πρέπει να κάνετε είναι να ανακτήσετε τις αλλαγές του άλλου και να τις ενσωματώσετε στις δικές σας, ώστε να σας επιτραπεί να ωθήσετε.
Στην ενότητα <<ch03-git-branching#ch03-git-branching>> θα δείτε περισσότερες πληροφορίες σχετικά με την ώθηση δεδομένων σε απομακρυσμένους διακομιστές.

[[r_inspecting_remote]]
==== Επιθεώρηση απομακρυσμένου αποθετηρίου

Αν θέλετε να δείτε περισσότερες πληροφορίες σχετικά με ένα απομακρυσμένο αποθετήριο, μπορείτε να χρησιμοποιήσετε την εντολή `git remote show <όνομα-απομακρυσμένου>`.(((εντολές git, remote)))
Αν εκτελέσετε αυτή την εντολή αυτή με κάποιο σύντομο όνομα, όπως το `origin`, θα δείτε κάτι σαν:

[source,console]
----
$ git remote show origin
* remote origin
  Fetch URL: https://github.com/schacon/ticgit
  Push  URL: https://github.com/schacon/ticgit
  HEAD branch: master
  Remote branches:
    master                               tracked
    dev-branch                           tracked
  Local branch configured for 'git pull':
    master merges with remote master
  Local ref configured for 'git push':
    master pushes to master (up to date)
----

Παρατίθεται το URL του απομακρυσμένου αποθετηρίου καθώς και οι κλάδοι τους οποίους παρακολουθείτε.
Επίσης σας ενημερώνει ότι αν βρίσκεστε στον κλάδο `master` και εκτελέσετε `git pull`, ο κλάδος `master` του απομακρυσμένου αποθετηρίου θα συγχωνευτεί αυτόματα στον τοπικό κλάδο `master` αφότου ανακτηθεί.
Επίσης παραθέτει τις απομακρυσμένες αναφορές που έχει κατεβάσει.

Το παραπάνω είναι ένα απλό παράδειγμα που ενδεχομένως θα συναντήσετε.
Όταν αρχίσετε να χρησιμοποιείτε πιο εκτεταμένα το Git, μπορεί να δείτε πολύ περισσότερες πληροφορίες όταν εκτελείτε την εντολή `git remote show`. 
Για παράδειγμα:

[source,console]
----
$ git remote show origin
* remote origin
  URL: https://github.com/my-org/complex-project
  Fetch URL: https://github.com/my-org/complex-project
  Push  URL: https://github.com/my-org/complex-project
  HEAD branch: master
  Remote branches:
    master                           tracked
    dev-branch                       tracked
    markdown-strip                   tracked
    issue-43                         new (next fetch will store in remotes/origin)
    issue-45                         new (next fetch will store in remotes/origin)
    refs/remotes/origin/issue-11     stale (use 'git remote prune' to remove)
  Local branches configured for 'git pull':
    dev-branch merges with remote dev-branch
    master     merges with remote master
  Local refs configured for 'git push':
    dev-branch                     pushes to dev-branch                     (up to date)
    markdown-strip                 pushes to markdown-strip                 (up to date)
    master                         pushes to master                         (up to date)
----

Αυτή η εντολή σας δείχνει σε αυτή την περίπτωση σε ποιον κλάδο ωθείτε δεδομένα όταν βρίσκεστε σε συγκεκριμένους κλάδους και εκτελείτε την εντολή `git push`.
Επίσης σας δείχνει ποιους απομακρυσμένους κλάδους του διακομιστή δεν έχετε ακόμα, ποιους απομακρυσμένους κλάδους έχετε αλλά έχουν αφαιρεθεί από τον διακομιστή, καθώς και τους κλάδους που θα συγχωνευτούν αυτόματα στους τοπικούς κλάδους που τους παρακολουθούν αν εκτελέσετε την εντολή `git pull`.

==== Μετονομασία και διαγραφή απομακρυσμένων αποθετηρίων

Αν θέλετε να μετονομάσετε το σύντομο όνομα ενός απομακρυσμένου αποθετηρίου, εκτελείτε την εντολή `git remote rename`.(((εντολές git, remote)))
Για παράδειγμα, αν θέλετε να μετονομάσετε το `pb` σε `paul`, μπορείτε να χρησιμοποιήσετε την `git remote rename`:

[source,console]
----
$ git remote rename pb paul
$ git remote
origin
paul
----

Αξίζει να σημειωθεί ότι η εντολή αυτή αλλάζει επίσης τα ονόματα των απομακρυσμένων κλάδων που παρακολουθείτε.
Στον κλάδο στον οποίο αναφερόσασταν ως `pb/master` πλέον θα αναφέρεστε ως `paul/master`.

Μπορεί επίσης για κάποιο λόγο να θέλετε να διαγράψετε ένα απομακρυσμένο αποθετήριο. 
Για παράδειγμα, μπορεί ο διακομιστής έχει μετακινηθεί σε άλλη διεύθυνση ή δεν χρησιμοποιείτε καθόλου το συγκεκριμένο αποθετήριο, ή απλά κάποιος συνεργάτης έχει εγκαταλείψει -- μπορείτε να χρησιμοποιήσετε είτε την εντολή `git remote remove` ή την `git remote rm`:

[source,console]
----
$ git remote rm paul
$ git remote
origin
----

Μόλις σβήσετε την αναφορά σε κάποιο απομακρυσμένο αποθετήριο, όλοι οι απομακρυσμένοι κλάδοι και όλες οι ρυθμίσεις που είναι σχετικές με αυτό το απομακρυσμένο αποθετήριο, θα σβηστούν επίσης.


