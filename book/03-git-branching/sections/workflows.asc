=== Ροές εργασίας με διακλαδώσεις

Τώρα που γνωρίζετε τα βασικά των διαδικασιών διακλάδωσης και συγχώνευσης, το ερώτημα που τίθεται είναι τι μπορείτε ή τι θα έπρεπε να κάνετε με αυτά.
Σε αυτή την ενότητα θα καλύψουμε μερικές συνήθεις ροές εργασίας που καθίστανται δυνατές χάρη σε αυτού του είδους την ελαφριά διαδικασία διακλάδωσης, ώστε να αποφασίσετε αν θέλετε να τις ενσωματώσετε στον δικό σας κύκλο ανάπτυξης ενός έργου.

==== Μακρόβιοι κλάδοι

(((κλάδοι, μακρόβιοι)))(((κλάδοι, long-running)))
Επειδή το Git χρησιμοποιεί μία απλή τριμερή συγχώνευση, η συγχώνευση ενός κλάδου με κάποιον άλλο πολλές φορές κατά τη διάρκεια μία μακράς περιόδου είναι γενικά εύκολη.
Αυτό σημαίνει ότι είναι δυνατό να έχετε πολλούς κλάδους που είναι συνεχώς ανοιχτοί και τους οποίους χρησιμοποιείτε σε διαφορετικά στάδια του κύκλου ανάπτυξης του έργου· μπορείτε να συγχωνεύετε συχνά κάποιους από αυτούς σε άλλους.

Πολλοί προγραμματιστές που χρησιμοποιούν το Git έχουν μία ροή εργασιών που υιοθετεί αυτή την προσέγγιση. 
Για παράδειγμα στον κλάδο `master` έχουν αποκλειστικά κώδικα που είναι απολύτως σταθερός (stable) -- ενδεχομένως μόνον κώδικα που έχει δημοσιευτεί ή θα δημοσιευτεί.
Έχουν έναν άλλο παράλληλο κλάδο που τον ονομάζουν `develop` ή `next` στον οποίο δουλεύουν ή στον οποίο ελέγχουν την σταθερότητα -- αυτός δεν είναι απαραίτητα σταθερός, αλλά όποτε καθίσταται σταθερός ενδεχομένως συγχωνεύεται με τον κλάδο `master`.
Ο κλάδος αυτός χρησιμοποιείται για να ενσωματώνει _θεματικούς κλάδους_ (βραχύβιους κλάδους, όπως ο κλάδος `iss53` που είδατε προηγουμένως) όταν αυτοί είναι έτοιμοι, ώστε να είναι σίγουροι ότι περνούν όλα τα τεστ και δεν εισάγουν σφάλματα (bugs).

Στην πραγματικότητα, μιλάμε για δείκτες που προχωρούν στη γραμμή των υποβολών σας. 
Οι σταθεροί κλάδοι βρίσκονται πολύ πίσω στο ιστορικό υποβολών και οι πειραματικοί, καινοτόμοι κλάδοι βρίσκονται πολύ μπροστά στο ιστορικό.

.Γραμμική προβολή διακλάδωσης με προοδευτική ευστάθεια.
image::images/lr-branches-1.png[Γραμμική προβολή διακλάδωσης με προοδευτική ευστάθεια.]

Γενικά είναι ευκολότερο να τους σκέφτεστε σαν σιλό (silo) εργασίας, από τα οποία κάθε τόσο κάποιες υποβολές, που έχουν δοκιμαστεί πλήρως, προκρίνονται σε άλλα, σταθερότερα σιλό.

[[rlrbranch_b]]
.Προβολή "`σιλό`" διακλάδωσης με προοδευτική ευστάθεια.
image::images/lr-branches-2.png[Προβολή "`σιλό`" διακλάδωσης με προοδευτική ευστάθεια.]

Μπορείτε να συνεχίζετε να κάνετε κάτι τέτοιο για πολλά επίπεδα ευστάθειας. 
Κάποια μεγαλύτερα έργα έχουν επίσης έναν κλάδο `proposed` ή `pu` (proposed updates) που έχει ενσωματωμένους κλάδους, οι οποίοι ενδεχομένως δεν είναι έτοιμοι να εισαχθούν στον κλάδο `next` ή τον κλάδο `master`.
Η λογική είναι ότι οι κλάδοι βρίσκονται σε διαφορετικά επίπεδα ευστάθειας· όταν φτάσουν σε ένα πιο σταθερό επίπεδο, συγχωνεύονται με τον κλάδο που βίσκεται από πάνω τους. 
Επαναλαμβάνουμε ότι το να υπάρχουν πολλούς μακρόβιοι κλάδοι δεν είναι απαραίτητο, αλλά συχνά είναι χρήσιμο, ειδικά όταν έχετε πολύ μεγάλα ή περίπλοκα έργα.

[[r_topic_branch]]
==== Θεματικοί κλάδοι

(((κλάδοι, θεματικοί)))(((κλάδοι, topic)))
Από την άλλη, οι θεματικοί κλάδοι είναι χρήσιμοι σε έργα οποιουδήποτε μεγέθους.
Ένας θεματικός κλάδος είναι ένας βραχύβιος κλάδος, τον οποίο δημιουργείτε και χρησιμοποιείτε αποκλειστικά για μία συγκεκριμένη λειτουργικότητα (feature) ή κάποια σχετική με αυτή εργασία.
Αυτό είναι κάτι που πιθανότατα δεν έχετε κάνει ποτέ σε ένα VCS στο παρελθόν, διότι γενικά η διαδικασία δημιουργίας και συγχώνευσης κλάδων είναι μία _ακριβή_ διαδικασία.
Όμως στο Git είναι σύνηθες κάποιος να δημιουργεί κλάδους, να εργάζεται με αυτούς, να τους συγχωνεύει και να τους διαγράφει πολλές φορές κάθε μέρα.

Αυτό το είδατε στην προηγούμενη ενότητα με τους κλάδους `iss53` και `hotfix` που δημιουργήσατε.
Κάνατε μερικές υποβολές και τους διαγράψατε αμέσως αφού τους συγχωνεύσατε με τον κύριο κλάδο.
Αυτή η τεχνική σας επιτρέπει να αλλάζετε περιβάλλον γρήγορα και πλήρως -- επειδή η εργασία σας είναι διαχωρισμένη σε κλάδους-σιλό στους οποίους όλες οι αλλαγές έχουν να κάνουν με αυτό θέμα, είναι ευκολότερο να δείτε τι ακριβώς έχει γίνει κατά την επανεξέταση του κώδικα (code review) ή κάποια άλλη σχετική διαδικασία.
Μπορείτε να διατηρήσετε τις αλλαγές εκεί για λεπτά, μέρες ή μήνες, να τις συγχωνεύσετε όταν είναι έτοιμες για συγχώνευση ανεξάρτητα από τη χρονική σειρά με την οποία έχουν γίνει ή έχουν δουλευτεί.

Για παράδειγμα ας υποθέσουμε ότι έχετε κάνει κάποια δουλειά (στον κλάδο `master`), δημιουργήσατε έναν κλάδο για ένα πρόβλημα (`iss91`), δουλέψατε σε αυτό για λίγο, δημιουργήσατε έναν άλλο κλάδο για να δοκιμάσετε έναν άλλο τρόπο να επιλύσετε το ίδιο πρόβλημα (`iss91v2`), επιστρέψατε στον κλάδο `master` και δουλέψατε εκεί για λίγο και από κει φτιάξατε έναν άλλο κλάδο για να δουλέψετε πάνω σε κάποια ιδέα για την οποία δεν είστε σίγουροι ότι είναι καλή ιδέα (κλάδος `dumbidea`).
Το ιστορικό υποβολών θα είναι περίπου σαν το παρακάτω:

.Πολλαπλοί θεματικοί κλάδοι.
image::images/topic-branches-1.png[Πολλαπλοί θεματικοί κλάδοι.]

Ας υποθέσουμε τώρα ότι αποφασίσατε ότι σας άρεσε η δεύτερη λύση, δηλαδή η `iss91v2`, στο πρόβλημα· επιπλέον δείξατε τον κλάδο `dumbidea` στους συναδέλφους σας και αποδείχθηκε ότι είναι ιδιοφυής. 
Μπορείτε να πετάξετε τον αρχικό κλάδο `iss91` (χάνοντας τις υποβολές `C5` και `C6`) και να συγχωνεύσετε αυτούς τους δύο.
Το ιστορικό τότε θα μοιάζει με το παρακάτω:

.Ιστορικό μετά τη συγχώνευση των κλάδων `dumbidea` και `iss91v2`.
image::images/topic-branches-2.png[Ιστορικό μετά τη συγχώνευση των κλάδων `dumbidea` και `iss91v2`.]

θα δείτε με περισσότερες λεπτομέρειες διάφορες δυνατές ροές εργασίας για τα έργα σας στο Git στο κεφάλαιο <<ch05-distributed-git#ch05-distributed-git>>. 
Γι' αυτό καλό θα είναι να έχετε διαβάσει αυτό το κεφάλαιο προτού αποφασίσετε ποιο μοντέλο διακλαδώσεων θα χρησιμοποιήσετε στο επόμενο έργο σας.

Όταν τα κάνετε όλα αυτά είναι σημαντικό να θυμάστε ότι αυτοί οι κλάδοι είναι μόνο τοπικοί. 
Όταν δημιουργείτε ή συγχωνεύετε διακλαδώσεις, τα πάντα συμβαίνουν στο τοπικό σας αποθετήριο Git -- δεν υπάρχει καμία επικοινωνία με κανέναν διακομιστή.
