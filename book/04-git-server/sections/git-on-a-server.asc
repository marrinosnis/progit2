[[r_getting_git_on_a_server]]
=== Εγκατάσταση του Git σε διακομιστή

Τώρα θα δείτε τη δημιουργία μιας υπηρεσίας Git που θα εκτελεί αυτά τα πρωτόκολλα στον δικό σας διακομιστή.

[NOTE]
====
Εδώ θα επιδείξετε τις εντολές και τα βήματα που απαιτούνται για να κάνετε βασικές απλοποιημένες εγκαταστάσεις σε έναν διακομιστή σε Linux, αν και είναι επίσης δυνατή η εκτέλεση αυτών των υπηρεσιών σε διακομιστές Mac ή Windows.
Η εγκατάσταση ενός διακομιστή παραγωγής στην υποδομή σας προϋποθέτει ασφαλώς διαφορές στα μέτρα ασφαλείας ή τα εργαλεία των λειτουργικών συστημάτων, αλλά αυτό θα σας δώσει τη γενική ιδέα για το τι εμπλέκεται.
====

Για να ρυθμίσετε αρχικά οποιοδήποτε διακομιστή Git, πρέπει να εξάγετε ένα υπάρχον αποθετήριο σε ένα νέο γυμνό αποθετήριο -- ένα αποθετήριο που δεν περιέχει κατάλογο εργασίας.
Αυτό είναι γενικά εύκολο να γίνει.
Για να κλωνοποιήσετε το αποθετήριό σας και να δημιουργήσετε ένα νέο γυμνό αποθετήριο, εκτελείτε την εντολή `clone` με την επιλογή `--bare`. (((εντολές git, clone, bare)))
Συμβατικά, οι γυμνοί κατάλογοι αποθετηρίων τελειώνουν σε `.git`, ως εξής:

[source,console]
----
$ git clone --bare my_project my_project.git
Cloning into bare repository 'my_project.git'...
done.
----

Θα πρέπει τώρα να έχετε ένα αντίγραφο των δεδομένων του καταλόγου Git στον κατάλογο `my_project.git`.

Αυτό είναι σχεδόν ισοδύναμο με κάτι σαν αυτό:

[source,console]
----
$ cp -Rf my_project/.git my_project.git
----

Υπάρχουν μερικές μικροδιαφορές στο αρχείο ρυθμίσεων· αλλά για τον σκοπό σας αυτό δεν είναι σημαντικό.
Η παραπάνω εντολή παίρνει το αποθετήριο Git μόνο του, χωρίς κατάλογο εργασίας και δημιουργεί έναν κατάλογο αποκλειστικά για αυτό.


[[r_bare_repo]]
==== Τοποθέτηση του γυμνού αποθετηρίου σε έναν διακομιστή

Τώρα που έχετε ένα γυμνό αντίγραφο του αποθετηρίου σας, το μόνο που χρειάζεται να κάνετε είναι να το βάλετε σε έναν διακομιστή και να ρυθμίσετε τα πρωτόκολλά σας.
Ας υποθέσουμε ότι έχετε δημιουργήσει έναν διακομιστή που ονομάζεται `git.example.com` στον οποίο έχετε πρόσβαση μέσω SSH και θέλετε να αποθηκεύσετε όλα τα αποθετήρια Git στον κατάλογο `/srv/git`.
Υποθέτοντας ότι το `/opt/git` υπάρχει σε αυτόν τον διακομιστή, μπορείτε να ρυθμίσετε το νέο αποθετήριό σας αντιγράφοντας το γυμνό αποθετήριο:

[source,console]
----
$ scp -r my_project.git user@git.example.com:/srv/git
----

Σε αυτό το σημείο, άλλοι χρήστες που έχουν πρόσβαση SSH στον ίδιο διακομιστή ο οποίος έχει πρόσβαση ανάγνωσης στον κατάλογο `/srv/git` μπορούν να κλωνοποιήσουν τον αποθετήριό σας τρέχοντας

[source,console]
----
$ git clone user@git.example.com:/srv/git/my_project.git
----

Αν ένας χρήστης συνδεθεί με SSH σε έναΝ διακομιστή και έχει δικαίωμα εγγραφής στον κατάλογο `/srv/git/my_project.git`, θα έχει αυτόματα δικαίωμα ώθησης.

Το Git θα προσθέσει αυτόματα δικαιώματα εγγραφής σε ομάδες σε ένα αποθετήριο σωστά εάν εκτελέσετε την εντολή `git init` με την επιλογή `--shared`.
Σημειώστε πως τρέχοντας αυτή την εντολή, δεν θα καταστρέψετε καμία υποβολή, αναφορά, κτλ. στην όλη διαδικασία. (((εντολές git, init, bare)))

[source,console]
----
$ ssh user@git.example.com
$ cd /srv/git/my_project.git
$ git init --bare --shared
----

Βλέπετε πόσο εύκολο είναι να πάρετε ένα αποθετήριο Git, να δημιουργήσετε μια γυμνή έκδοσή του και να την τοποθετήσετε σε έναν διακομιστή στον οποίο εσείς και οι συνεργάτες σας έχετε πρόσβαση μέσω SSH.
Τώρα είστε έτοιμοι να συνεργαστείτε στο ίδιο έργο.

Είναι σημαντικό να σημειωθεί ότι αυτό είναι κυριολεκτικά το μόνο που χρειάζεται να κάνετε για να τρέξετε έναν χρήσιμο διακομιστή Git στον οποίο έχουν πρόσβαση πολλοί χρήστες -- απλά προσθέτετε λογαριασμούς SSH σε έναν διακομιστή και ρίχνετε ένα γυμνό αποθετήριο κάπου όπου όλοι αυτοί οι χρήστες έχουν πρόσβαση ανάγνωσης/εγγραφής.
Είστε έτοιμοι -- δεν χρειάζεται τίποτα άλλο.

Στις επόμενες ενότητες θα δείτε πώς μπορείτε να επεκταθείτε σε πιο εξεζητημένες ρυθμίσεις.
Αυτή η συζήτηση θα περιλαμβάνει το πώς να αποφύγετε τη δημιουργία λογαριασμού για κάθε χρήστη, την προσθήκη δημόσιας πρόσβασης ανάγνωσης σε αποθετήρια, την εγκατάσταση UI ιστού και πολλά άλλα.
Ωστόσο, έχετε υπόψη ότι για να συνεργαστείτε με άλλους σε ένα ιδιωτικό έργο, το μόνο που _χρειαζεστε_ είναι ένας διακομιστής SSH και ένα γυμνό αποθετήριο.

==== Μικρές εγκαταστάσεις

Εάν είστε μια μικρή επιχείρηση ή απλώς δοκιμάζετε το Git στον οργανισμό σας και έχετε μόνο λίγους προγραμματιστές, τα πράγματα είναι απλά.
Μια από τις πιο περίπλοκες πτυχές της εγκατάστασης ενός διακομιστή Git είναι η διαχείριση των χρηστών.
Εάν θέλετε μερικά αποθετήρια να είναι πρόσβασιμα από ορισμένους χρήστες μόνο-για-ανάγνωση  και για ανάγνωση/εγγραφή από άλλους, η πρόσβαση και τα δικαιώματα μπορεί να είναι λίγο πιο δύσκολο να ρυθμιστούν.

===== Πρόσβαση μέσω SSH

(((serving repositories, SSH)))
Εάν έχετε έναν διακομιστή στον οποίο όλοι οι προγραμματιστές σας έχουν ήδη πρόσβαση SSH, είναι γενικά ευκολότερο να δημιουργήσετε το πρώτο αποθετήριό σας σε αυτόν, επειδή δεν χρειάζεται να κάνετε σχεδόν καθόλου δουλειά (όπως συζητήθηκε στην προηγούμενη ενότητα).
Αν θέλετε πιο πολύπλοκα είδη δικαιωμάτων ελέγχου πρόσβασης στα αποθετήριά σας, μπορείτε να τα χειριστείτε με τα δικαιώματα συστήματος αρχείων του λειτουργικού συστήματος που τρέχει ο διακομιστής σας.

Εάν θέλετε να τοποθετήσετε τα αποθετήριά σας σε έναν διακομιστή που δεν διαθέτει λογαριασμούς για όλα τα μέλη της ομάδας σας για τα οποία θέλετε να έχουν δικαίωμα εγγραφής, τότε πρέπει να τους δώσετε πρόσβαση SSH.
Αν έχετε έναν διακομιστή με τον οποίο μπορείτε να τα κάνετε αυτά, τότε έχετε ήδη εγκατεστημένο έναν διακομιστή SSH και έτσι έχετε πρόσβαση στον διακομιστή.

Υπάρχουν μερικοί τρόποι με τους οποίους μπορείτε να δώσετε πρόσβαση σε όλους στην ομάδα σας.
Ο πρώτος είναι να δημιουργήσετε λογαριασμούς για όλους, κάτι που είναι απλό, αλλά μπορεί να είναι κουραστικό.
Μπορεί να μην θέλετε να τρέξετε το `adduser` (ή το εναλλακτικό `useradd`) και να ορίσετε προσωρινούς κωδικούς πρόσβασης για κάθε χρήστη.

Μια δεύτερη μέθοδος είναι να δημιουργήσετε έναν μοναδικό χρήστη 'git' στο μηχάνημα, να ζητήσετε από κάθε χρήστη που θα έχει πρόσβαση εγγραφής να σας στείλει ένα δημόσιο κλειδί SSH και να προσθέσετε αυτό το κλειδί στο αρχείο `~/.ssh/authorized_keys` του νέου χρήστη 'git'.
Σε αυτό το σημείο, όλοι θα μπορούν να έχουν πρόσβαση σε αυτό το μηχάνημα μέσω του χρήστη 'git'.
Αυτό δεν επηρεάζει τα δεδομένα των υποβολών με κανέναν τρόπο -- ο χρήστης SSH που συνδέεται δεν επηρεάζει τις υποβολές που έχετε καταγράψει.

Ένας άλλος τρόπος είναι να στήσετε τον διακομιστή SSH ώστρε να ταυτοποιεί μέσω ενός διακομιστή LDAP ή κάποια άλλη κεντρική πηγή ταυτοποίησης που ενδεχομένως έχετε ήδη ρυθμίσει.
Εφόσον ο κάθε χρήστης μπορεί να αποκτήσει πρόσβαση στο κέλυφος, οποιοσδήποτε μηχανισμός ταυτοποίησης SSH που μπορείτε να σκεφτείτε θα πρέπει να λειτουργεί.
